// Loader
.loader {
  display: grid;
  display: none;
  place-items: center;
  position: fixed;
  // inset: 0;
  // width: 100vw;
  height: 100%;
  z-index: 999;
  top: 0;
  // min-height: 100vh;
  // min-height: 100svh;
  width: 100%;
  // background: $secondary;
  overflow: hidden;
  // transform: scale(2);
  color: $white;

  &__text {
    min-width: 100px;
    text-align: center;
    font-size: cross-media(40px, 991px, 60px);
  }

  &--1 {
    background: $secondary;
    z-index: 999;
  }

  &--2 {
    background-color: $accent;
    z-index: 9999;
    display: none;
  }
}

.button {
  display: flex;
  align-items: center;
  position: relative;
  z-index: 2;
  overflow: hidden;
  padding: 0.8rem 1.5rem;
  border: none;
  background: $white;
  border: solid 2px $black;
  border-radius: 5rem;
  color: $white;
  pointer-events: auto;
  cursor: pointer;

  // 4K
  @include view(ultra) {
    // padding: calc(1.5 * 1.6rem) calc(1.5 * 3rem);
    padding: cross-media(1.6rem, 3000px, 2.4rem)
      cross-media(1.5rem, 3000px, 2.25rem);
  }

  &:hover {
    span {
      color: #fff;
      .ic-btn-arrow {
        animation: arrowBounce 1.2s ease-in-out 0s infinite reverse;
      }
    }
  }

  &:before,
  &:after {
    position: absolute;
    inset: 0;
  }

  &:before {
    content: "";
    background: $black;
    width: 170%;
    // height: 0;
    padding-bottom: 120%;
    top: -100%;
    left: -30%;
    border-radius: 50%;
    transform: translate3d(0, 70%, 0) scale3d(0, 0, 0);
  }

  &:after {
    content: "";
    background: $black;
    border-radius: 5%;
    transform: translate3d(0, -110%, 0);
    transition: transform 0.4s cubic-bezier(0.1, 0, 0.3, 1);
  }

  &:hover:before {
    transform: translate3d(0, 0, 0) scale3d(1, 1, 1);
    transition: transform 0.4s cubic-bezier(0.1, 0, 0.3, 1);
  }

  &:hover:after {
    transform: translate3d(0, 0, 0);
    transition-duration: 0.05s;
    transition-delay: 0.4s;
    transition-timing-function: linear;
  }

  &__text {
    display: flex;
    align-items: center;
    position: relative;
    color: $black;
    z-index: 10;
    transition: 0.4s ease;

    &::after {
      content: "\e900";
      font-family: "icomoon";
      font-size: 10px;
      margin-left: 12px;
    }

    &--back {
      &::after {
        content: "";
      }

      &::before {
        content: "\e900";
        font-family: "icomoon";
        font-size: 10px;
        margin-right: 12px;
        transform: scaleX(-1);
      }
    }
  }
}

// Button Small
.link {
  // Arrow
  &--arrow {
    position: relative;
    display: flex;
    align-items: center;
    gap: 0.5rem;

    &:after {
      @include icon("\e900");
      font-size: 6px;

      // 4K
      @include view(ultra) {
        // font-size: calc(1.5 * 6px);
        margin-top: 4px;
        font-size: cross-media(6px, 3000px, 9px);
      }
    }

    &:hover:after {
      animation: link-arrow 1.2s ease-in-out 0s infinite reverse;
    }
  }

  // Line
  &--line {
    position: relative;
    white-space: nowrap;

    &::before {
      position: absolute;
      width: 100%;
      height: 1px;
      background-color: currentColor;
      top: 100%;
      left: 0;
      pointer-events: none;
    }

    &::before {
      content: "";
      transform-origin: 100% 50%;
      transform: scale3d(0, 1, 1);
      transition: transform 0.3s;
    }

    &:hover::before {
      transform-origin: 0% 50%;
      transform: scale3d(1, 1, 1);
    }
  }
}

// Custom Checkbox - Always add this class to the label element that contains the input
.custom-checkbox {
  position: relative;
  padding-left: 30px;
  cursor: pointer;

  // Hide the browser's default checkbox
  & input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }

  // Create a custom checkbox
  &__checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 20px;
    width: 20px;
    border: 1px solid $black;
    background-color: $white;
  }

  // Create the checkmark/indicator (hidden when not checked)
  &__checkmark:after {
    content: "";
    position: absolute;
    display: none;
  }

  // Show the checkmark when checked
  & input:checked ~ &__checkmark:after {
    display: block;
  }

  // Style the checkmark/indicator
  &__checkmark:after {
    left: 6px;
    top: 1px;
    width: 6px;
    height: 12px;
    border: solid #000;
    border-width: 0 1px 1px 0;
    rotate: 45deg;
    // -webkit-transform: rotate(45deg);
    // -ms-transform: rotate(45deg);
    // transform: rotate(45deg);
  }
}

// Hashtag Container
.hashtag-container {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: cross-media(4px, 991px, 8px);
  padding: 12px cross-media(40px, 991px, 80px);
  background-color: rgba($secondary, 0.2);
  border-radius: 80px;
}

// Hamburger
.hamburger {
  position: relative;
  width: 36px;
  height: 36px;

  &__top,
  &__bottom {
    position: absolute;
    height: 2px;
    width: 36px;
    background-color: $black;
    transform-origin: center;
    top: 50%;
    transform: translateY(-50%);
    transition: all ease 300ms;
  }

  &__top {
    transform: translateY(-4px);
    &.active {
      // width: 50px;
      transform: rotate(45deg) translateY(0);
    }
  }

  &__bottom {
    transform: translateY(4px);
    // margin-top: 8px;
    // background-color: red;
    &.active {
      // margin-top: 0;
      // width: 50px;
      transform: rotate(-45deg) translateY(0);
    }
  }
}

/*
//Toggle
.toggle {
  //   margin: 0 auto;
  //   width: 100%;
  //   display: flex;
  //   justify-content: center;
  //   align-items: center;
  position: fixed;
  max-width: 40px;

  left: 0;
  right: 0;
  bottom: 2%;
  margin: auto;

  display: none;
  background-color: rgba($secondary, 0.7);

  border-radius: 200px;
  z-index: 999999;
  backdrop-filter: blur(5px);
  cursor: pointer;
}

.hamburger {
  width: 100%;
  &__line {
    fill: none;
    stroke: #fff;
    stroke-width: 40;
    stroke-miterlimit: 10;

    &--top {
      transform-origin: 0 0;
    }

    &--bottom {
      transform-origin: 0 0;
    }
  }
}
*/

/*
// HAMBURGER BOILERPLATE
// Hamburger Menu
.hamburger {
  display: flex;
  flex-direction: column;
  justify-content: center;
  height: 30px;
  cursor: pointer;
  z-index: 10;

  @include view(lg-min) {
    display: none;
  }

  &--pressed {
    & .hamburger__button {
      transform: translateX(-50px);
      background: transparent;

      &:before {
        transform: rotate(45deg) translate(35px, -35px);
      }

      &:after {
        transform: rotate(-45deg) translate(35px, 35px);
      }
    }
  }

  &__button {
    display: flex;
    position: relative;
    z-index: 2;
    width: 36px;
    height: 3px;
    background: $primary;
    cursor: pointer;
    transition: all 0.5s ease-in-out;

    @include view(lg-min) {
      display: none;
    }

    &:before,
    &:after {
      content: "";
      position: absolute;
      width: 36px;
      height: 3px;
      background: $primary;
      transition: all 0.5s ease-in-out;
    }

    &:before {
      transform: translateY(-10px);
    }

    &:after {
      transform: translateY(10px);
    }
  }
}
*/

// Back to Top
.back-to-top {
  position: fixed;
  bottom: 0;
  right: 0;
  margin: cross-media(24px, 1024px, 48px);
  padding: cross-media(12px, 1024px, 24px);
  background-color: $accent;
  color: $white;
  opacity: 0;
  transform: rotate(-90deg);
  transition: opacity ease 0.2s;
  cursor: pointer;

  &--visible {
    visibility: visible;
    opacity: 1;
  }
  &::after {
    @include icon("\e901");
  }
}

// Search
.search-form {
  &__button {
    @include clear-styles;
    &:before {
      @include icon("\e902");
    }
  }
  // &__input {
  //   @include clear-styles;
  // }
}

// Drag Cursor
.cursor-track {
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  width: 0px;
  height: 0px;
  border-radius: 100%;
  opacity: 0;
  background-color: rgba($white, 0.4);
  transform: translate(-50%, -50%);

  pointer-events: none;
  transition: opacity 0.4s, width ease 0.8s, height ease 0.8s,
    background-color ease 0.3s, border-radius ease 0.8s;
  will-change: scale;

  &--active {
    // background-color: $white-op-80;
    opacity: 1;
    width: 80px;
    height: 80px;
    backdrop-filter: blur(15px);

    @include view(ultra) {
      width: cross-media(80px, 3000px, 120px);
      height: cross-media(80px, 3000px, 120px);
    }

    &:after {
      content: "drag";
      font-size: cross-media(14px, 3000px, 16px);

      @include view(ultra) {
        font-size: cross-media(16px, 3000px, 24px);
      }
    }
  }

  // &--clicked {
  //   background-color: rgba($accent, 0.6);
  // }
}

// Errors
.error-message {
  color: red;
}
